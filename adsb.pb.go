// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: adsb.proto

package dump1090_protobuf_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MSG,1
type IdentificationAndCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	Callsign         string                 `protobuf:"bytes,4,opt,name=callsign,proto3" json:"callsign,omitempty"`
}

func (x *IdentificationAndCategory) Reset() {
	*x = IdentificationAndCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentificationAndCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentificationAndCategory) ProtoMessage() {}

func (x *IdentificationAndCategory) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentificationAndCategory.ProtoReflect.Descriptor instead.
func (*IdentificationAndCategory) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{0}
}

func (x *IdentificationAndCategory) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *IdentificationAndCategory) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *IdentificationAndCategory) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *IdentificationAndCategory) GetCallsign() string {
	if x != nil {
		return x.Callsign
	}
	return ""
}

// MSG,2
type SurfacePositionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	Altitude         int32                  `protobuf:"varint,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	GroundSpeed      int32                  `protobuf:"varint,6,opt,name=ground_speed,json=groundSpeed,proto3" json:"ground_speed,omitempty"`
	Track            int32                  `protobuf:"varint,7,opt,name=track,proto3" json:"track,omitempty"`
	Latitude         float64                `protobuf:"fixed64,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude        float64                `protobuf:"fixed64,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
	IsOnGround       bool                   `protobuf:"varint,15,opt,name=is_on_ground,json=isOnGround,proto3" json:"is_on_ground,omitempty"`
}

func (x *SurfacePositionMessage) Reset() {
	*x = SurfacePositionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurfacePositionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurfacePositionMessage) ProtoMessage() {}

func (x *SurfacePositionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurfacePositionMessage.ProtoReflect.Descriptor instead.
func (*SurfacePositionMessage) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{1}
}

func (x *SurfacePositionMessage) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *SurfacePositionMessage) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *SurfacePositionMessage) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *SurfacePositionMessage) GetAltitude() int32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *SurfacePositionMessage) GetGroundSpeed() int32 {
	if x != nil {
		return x.GroundSpeed
	}
	return 0
}

func (x *SurfacePositionMessage) GetTrack() int32 {
	if x != nil {
		return x.Track
	}
	return 0
}

func (x *SurfacePositionMessage) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *SurfacePositionMessage) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *SurfacePositionMessage) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

// MSG,3
type AirbornePositionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	Altitude         int32                  `protobuf:"varint,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Latitude         float64                `protobuf:"fixed64,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude        float64                `protobuf:"fixed64,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Alert            bool                   `protobuf:"varint,12,opt,name=alert,proto3" json:"alert,omitempty"`
	Emergency        bool                   `protobuf:"varint,13,opt,name=emergency,proto3" json:"emergency,omitempty"`
	Spi              bool                   `protobuf:"varint,14,opt,name=spi,proto3" json:"spi,omitempty"`
	IsOnGround       bool                   `protobuf:"varint,15,opt,name=is_on_ground,json=isOnGround,proto3" json:"is_on_ground,omitempty"`
}

func (x *AirbornePositionMessage) Reset() {
	*x = AirbornePositionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirbornePositionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirbornePositionMessage) ProtoMessage() {}

func (x *AirbornePositionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirbornePositionMessage.ProtoReflect.Descriptor instead.
func (*AirbornePositionMessage) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{2}
}

func (x *AirbornePositionMessage) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *AirbornePositionMessage) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *AirbornePositionMessage) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *AirbornePositionMessage) GetAltitude() int32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *AirbornePositionMessage) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *AirbornePositionMessage) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *AirbornePositionMessage) GetAlert() bool {
	if x != nil {
		return x.Alert
	}
	return false
}

func (x *AirbornePositionMessage) GetEmergency() bool {
	if x != nil {
		return x.Emergency
	}
	return false
}

func (x *AirbornePositionMessage) GetSpi() bool {
	if x != nil {
		return x.Spi
	}
	return false
}

func (x *AirbornePositionMessage) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

// MSG,4
type AirborneVelocityMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	GroundSpeed      int32                  `protobuf:"varint,6,opt,name=ground_speed,json=groundSpeed,proto3" json:"ground_speed,omitempty"`
	Track            int32                  `protobuf:"varint,7,opt,name=track,proto3" json:"track,omitempty"`
	VerticalRate     int32                  `protobuf:"varint,10,opt,name=vertical_rate,json=verticalRate,proto3" json:"vertical_rate,omitempty"`
}

func (x *AirborneVelocityMessage) Reset() {
	*x = AirborneVelocityMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirborneVelocityMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirborneVelocityMessage) ProtoMessage() {}

func (x *AirborneVelocityMessage) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirborneVelocityMessage.ProtoReflect.Descriptor instead.
func (*AirborneVelocityMessage) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{3}
}

func (x *AirborneVelocityMessage) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *AirborneVelocityMessage) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *AirborneVelocityMessage) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *AirborneVelocityMessage) GetGroundSpeed() int32 {
	if x != nil {
		return x.GroundSpeed
	}
	return 0
}

func (x *AirborneVelocityMessage) GetTrack() int32 {
	if x != nil {
		return x.Track
	}
	return 0
}

func (x *AirborneVelocityMessage) GetVerticalRate() int32 {
	if x != nil {
		return x.VerticalRate
	}
	return 0
}

// MSG,5
type SurveillanceAltMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	Altitude         int32                  `protobuf:"varint,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Alert            bool                   `protobuf:"varint,12,opt,name=alert,proto3" json:"alert,omitempty"`
	Spi              bool                   `protobuf:"varint,14,opt,name=spi,proto3" json:"spi,omitempty"`
	IsOnGround       bool                   `protobuf:"varint,15,opt,name=is_on_ground,json=isOnGround,proto3" json:"is_on_ground,omitempty"`
}

func (x *SurveillanceAltMessage) Reset() {
	*x = SurveillanceAltMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveillanceAltMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveillanceAltMessage) ProtoMessage() {}

func (x *SurveillanceAltMessage) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveillanceAltMessage.ProtoReflect.Descriptor instead.
func (*SurveillanceAltMessage) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{4}
}

func (x *SurveillanceAltMessage) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *SurveillanceAltMessage) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *SurveillanceAltMessage) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *SurveillanceAltMessage) GetAltitude() int32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *SurveillanceAltMessage) GetAlert() bool {
	if x != nil {
		return x.Alert
	}
	return false
}

func (x *SurveillanceAltMessage) GetSpi() bool {
	if x != nil {
		return x.Spi
	}
	return false
}

func (x *SurveillanceAltMessage) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

// MSG,6
type SurveillanceIdMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	Altitude         int32                  `protobuf:"varint,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Squawk           string                 `protobuf:"bytes,11,opt,name=squawk,proto3" json:"squawk,omitempty"`
	Alert            bool                   `protobuf:"varint,12,opt,name=alert,proto3" json:"alert,omitempty"`
	Emergency        bool                   `protobuf:"varint,13,opt,name=emergency,proto3" json:"emergency,omitempty"`
	Spi              bool                   `protobuf:"varint,14,opt,name=spi,proto3" json:"spi,omitempty"`
	IsOnGround       bool                   `protobuf:"varint,15,opt,name=is_on_ground,json=isOnGround,proto3" json:"is_on_ground,omitempty"`
}

func (x *SurveillanceIdMessage) Reset() {
	*x = SurveillanceIdMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveillanceIdMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveillanceIdMessage) ProtoMessage() {}

func (x *SurveillanceIdMessage) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveillanceIdMessage.ProtoReflect.Descriptor instead.
func (*SurveillanceIdMessage) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{5}
}

func (x *SurveillanceIdMessage) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *SurveillanceIdMessage) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *SurveillanceIdMessage) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *SurveillanceIdMessage) GetAltitude() int32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *SurveillanceIdMessage) GetSquawk() string {
	if x != nil {
		return x.Squawk
	}
	return ""
}

func (x *SurveillanceIdMessage) GetAlert() bool {
	if x != nil {
		return x.Alert
	}
	return false
}

func (x *SurveillanceIdMessage) GetEmergency() bool {
	if x != nil {
		return x.Emergency
	}
	return false
}

func (x *SurveillanceIdMessage) GetSpi() bool {
	if x != nil {
		return x.Spi
	}
	return false
}

func (x *SurveillanceIdMessage) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

// MSG,7
type AirToAirMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	Altitude         int32                  `protobuf:"varint,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	IsOnGround       bool                   `protobuf:"varint,15,opt,name=is_on_ground,json=isOnGround,proto3" json:"is_on_ground,omitempty"`
}

func (x *AirToAirMessage) Reset() {
	*x = AirToAirMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirToAirMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirToAirMessage) ProtoMessage() {}

func (x *AirToAirMessage) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirToAirMessage.ProtoReflect.Descriptor instead.
func (*AirToAirMessage) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{6}
}

func (x *AirToAirMessage) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *AirToAirMessage) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *AirToAirMessage) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *AirToAirMessage) GetAltitude() int32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *AirToAirMessage) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

// MSG,8
type AllCallReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaoAddr         string                 `protobuf:"bytes,1,opt,name=icao_addr,json=icaoAddr,proto3" json:"icao_addr,omitempty"`
	MessageGenerated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=message_generated,json=messageGenerated,proto3" json:"message_generated,omitempty"`
	MessageLogged    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=message_logged,json=messageLogged,proto3" json:"message_logged,omitempty"`
	IsOnGround       bool                   `protobuf:"varint,15,opt,name=is_on_ground,json=isOnGround,proto3" json:"is_on_ground,omitempty"`
}

func (x *AllCallReply) Reset() {
	*x = AllCallReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adsb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllCallReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllCallReply) ProtoMessage() {}

func (x *AllCallReply) ProtoReflect() protoreflect.Message {
	mi := &file_adsb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllCallReply.ProtoReflect.Descriptor instead.
func (*AllCallReply) Descriptor() ([]byte, []int) {
	return file_adsb_proto_rawDescGZIP(), []int{7}
}

func (x *AllCallReply) GetIcaoAddr() string {
	if x != nil {
		return x.IcaoAddr
	}
	return ""
}

func (x *AllCallReply) GetMessageGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageGenerated
	}
	return nil
}

func (x *AllCallReply) GetMessageLogged() *timestamppb.Timestamp {
	if x != nil {
		return x.MessageLogged
	}
	return nil
}

func (x *AllCallReply) GetIsOnGround() bool {
	if x != nil {
		return x.IsOnGround
	}
	return false
}

var File_adsb_proto protoreflect.FileDescriptor

var file_adsb_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x64, 0x73, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x64,
	0x73, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x19, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x61, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x61, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x47,
	0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xf2, 0x02, 0x0a, 0x16, 0x53, 0x75, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x61, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x61, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x47,
	0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x80, 0x03, 0x0a, 0x17,
	0x41, 0x69, 0x72, 0x62, 0x6f, 0x72, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x61, 0x6f, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x61, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a,
	0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70,
	0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x70, 0x69, 0x12, 0x20, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xa0,
	0x02, 0x0a, 0x17, 0x41, 0x69, 0x72, 0x62, 0x6f, 0x72, 0x6e, 0x65, 0x56, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63,
	0x61, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x63, 0x61, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x41, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67,
	0x67, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x74,
	0x65, 0x22, 0xa7, 0x02, 0x0a, 0x16, 0x53, 0x75, 0x72, 0x76, 0x65, 0x69, 0x6c, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x63, 0x61, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x63, 0x61, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x6f, 0x67, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x69, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x70, 0x69, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xdc, 0x02, 0x0a, 0x15,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x69, 0x6c, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x61, 0x6f, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x61, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x71,
	0x75, 0x61, 0x77, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x71, 0x75, 0x61,
	0x77, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x69, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x70, 0x69, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6f,
	0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x0f, 0x41,
	0x69, 0x72, 0x54, 0x6f, 0x41, 0x69, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x63, 0x61, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x63, 0x61, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x61, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x61, 0x6f, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_adsb_proto_rawDescOnce sync.Once
	file_adsb_proto_rawDescData = file_adsb_proto_rawDesc
)

func file_adsb_proto_rawDescGZIP() []byte {
	file_adsb_proto_rawDescOnce.Do(func() {
		file_adsb_proto_rawDescData = protoimpl.X.CompressGZIP(file_adsb_proto_rawDescData)
	})
	return file_adsb_proto_rawDescData
}

var file_adsb_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_adsb_proto_goTypes = []interface{}{
	(*IdentificationAndCategory)(nil), // 0: adsb.IdentificationAndCategory
	(*SurfacePositionMessage)(nil),    // 1: adsb.SurfacePositionMessage
	(*AirbornePositionMessage)(nil),   // 2: adsb.AirbornePositionMessage
	(*AirborneVelocityMessage)(nil),   // 3: adsb.AirborneVelocityMessage
	(*SurveillanceAltMessage)(nil),    // 4: adsb.SurveillanceAltMessage
	(*SurveillanceIdMessage)(nil),     // 5: adsb.SurveillanceIdMessage
	(*AirToAirMessage)(nil),           // 6: adsb.AirToAirMessage
	(*AllCallReply)(nil),              // 7: adsb.AllCallReply
	(*timestamppb.Timestamp)(nil),     // 8: google.protobuf.Timestamp
}
var file_adsb_proto_depIdxs = []int32{
	8,  // 0: adsb.IdentificationAndCategory.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 1: adsb.IdentificationAndCategory.message_logged:type_name -> google.protobuf.Timestamp
	8,  // 2: adsb.SurfacePositionMessage.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 3: adsb.SurfacePositionMessage.message_logged:type_name -> google.protobuf.Timestamp
	8,  // 4: adsb.AirbornePositionMessage.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 5: adsb.AirbornePositionMessage.message_logged:type_name -> google.protobuf.Timestamp
	8,  // 6: adsb.AirborneVelocityMessage.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 7: adsb.AirborneVelocityMessage.message_logged:type_name -> google.protobuf.Timestamp
	8,  // 8: adsb.SurveillanceAltMessage.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 9: adsb.SurveillanceAltMessage.message_logged:type_name -> google.protobuf.Timestamp
	8,  // 10: adsb.SurveillanceIdMessage.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 11: adsb.SurveillanceIdMessage.message_logged:type_name -> google.protobuf.Timestamp
	8,  // 12: adsb.AirToAirMessage.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 13: adsb.AirToAirMessage.message_logged:type_name -> google.protobuf.Timestamp
	8,  // 14: adsb.AllCallReply.message_generated:type_name -> google.protobuf.Timestamp
	8,  // 15: adsb.AllCallReply.message_logged:type_name -> google.protobuf.Timestamp
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_adsb_proto_init() }
func file_adsb_proto_init() {
	if File_adsb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_adsb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentificationAndCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adsb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurfacePositionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adsb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirbornePositionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adsb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirborneVelocityMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adsb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveillanceAltMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adsb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveillanceIdMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adsb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirToAirMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adsb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllCallReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adsb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_adsb_proto_goTypes,
		DependencyIndexes: file_adsb_proto_depIdxs,
		MessageInfos:      file_adsb_proto_msgTypes,
	}.Build()
	File_adsb_proto = out.File
	file_adsb_proto_rawDesc = nil
	file_adsb_proto_goTypes = nil
	file_adsb_proto_depIdxs = nil
}
